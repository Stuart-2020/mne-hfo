
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/working_with_bids.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_working_with_bids.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_working_with_bids.py:


===============================
02. Detect HFOs on BIDS Dataset
===============================

MNE-HFO requires strict adherence to the BIDS specification for EEG/iEEG data.
It currently depends on the data structures defined by ``MNE-Python`` and
``MNE-BIDS``.

In this example, we use MNE-BIDS to load real raw data and then use
MNE-HFO to detect HFOs. Specifically, we will follow these steps:

1. Load data via :func:`mne_bids.read_raw_bids`. We will load a sample subject
from the Fedele dataset [1].

2. Run a few ``mne_hfo.base.Detector`` instances to detect HFOs

3. Format the detected HFOs as a :class:`pandas.DataFrame`

4. Write to disk according to BEP-021_ and read it in again.

.. _BEP-021: https://docs.google.com/document/d/1PmcVs7vg7Th-cGC-UrX8rAhKUHIzOI-uIOh69_mvdlw/edit#

References
----------
[1] Fedele T, Burnos S, Boran E, Krayenbühl N, Hilfiker P, Grunwald T, Sarnthein J.
    Resection of high frequency oscillations predicts seizure outcome in the individual
    patient. Scientific Reports. 2017;7(1):13836.
    https://www.nature.com/articles/s41598-017-13064-1. doi:10.1038/s41598-017-13064-1

.. GENERATED FROM PYTHON SOURCE LINES 31-35

.. code-block:: default


    # Authors: Adam Li <adam2392@gmail.com>
    #








.. GENERATED FROM PYTHON SOURCE LINES 36-37

We are importing everything we need for this example:

.. GENERATED FROM PYTHON SOURCE LINES 37-44

.. code-block:: default

    from pathlib import Path

    from mne_bids import BIDSPath, read_raw_bids, make_report, print_dir_tree

    from mne_hfo import (RMSDetector, events_to_annotations, write_annotations,
                         read_annotations)








.. GENERATED FROM PYTHON SOURCE LINES 45-51

Load the data
-------------

First, we need some data to work with. We will use the test dataset
available with the repository under ``data/`` directory.


.. GENERATED FROM PYTHON SOURCE LINES 51-61

.. code-block:: default


    # root of BIDs dataset
    root = Path('../data/')

    # BIDS entities
    subject = '01'
    session = 'interictalsleep'
    run = '01'
    datatype = 'ieeg'








.. GENERATED FROM PYTHON SOURCE LINES 62-63

show the contents of the BIDS dataset

.. GENERATED FROM PYTHON SOURCE LINES 63-68

.. code-block:: default

    print_dir_tree(root)

    # Let's summarize the dataset.
    print(make_report(root, verbose=False))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    |data/
    |--- .bidsignore
    |--- README
    |--- dataset_description.json
    |--- participants.json
    |--- participants.tsv
    |--- derivatives/
    |------ sub-01/
    |--------- ses-interictalsleep/
    |------------ ieeg/
    |--------------- sub-01_ses-interictalsleep_run-01_annotations.json
    |--------------- sub-01_ses-interictalsleep_run-01_annotations.tsv
    |--- sub-01/
    |------ ses-interictalsleep/
    |--------- sub-01_ses-interictalsleep_scans.tsv
    |--------- ieeg/
    |------------ sub-01_ses-interictalsleep_run-01_channels.tsv
    |------------ sub-01_ses-interictalsleep_run-01_events.tsv
    |------------ sub-01_ses-interictalsleep_run-01_ieeg.eeg
    |------------ sub-01_ses-interictalsleep_run-01_ieeg.json
    |------------ sub-01_ses-interictalsleep_run-01_ieeg.vhdr
    |------------ sub-01_ses-interictalsleep_run-01_ieeg.vmrk
    Summarizing participants.tsv ../data/participants.tsv...
    The Fedele-epilepsy-HFO-iEEG Dataset dataset was created with BIDS version 1.4.0
    by Fedele T, Burnos S, Boran E, Krayenbühl N, Hilfiker P, Grunwald T, and
    Sarnthein J. This report was generated with MNE-BIDS
    (https://doi.org/10.21105/joss.01896). The dataset consists of 1 participants
    (comprised of 1 men and 0 women; handedness were all unknown; ages ranged from
    25.0 to 25.0 (mean = 25.0, std = 0.0))and 1 recording sessions: interictalsleep.
    Data was recorded using a iEEG system (Elekta manufacturer) sampled at 2000.0 Hz
    with line noise at 50.0 Hz. There was 1 scan in total. Recording durations
    ranged from 5.0 to 5.0 seconds (mean = 5.0, std = 0.0), for a total of 5.0
    seconds of data recorded over all scans. For each dataset, there were on average
    50.0 (std = 0.0) recording channels per scan, out of which 50.0 (std = 0.0) were
    used in analysis (0.0 +/- 0.0 were removed from analysis).




.. GENERATED FROM PYTHON SOURCE LINES 69-70

Load the dataset.

.. GENERATED FROM PYTHON SOURCE LINES 70-75

.. code-block:: default

    bids_path = BIDSPath(subject=subject, session=session,
                         run=run, datatype=datatype, root=root,
                         suffix='ieeg', extension='.vhdr')
    raw = read_raw_bids(bids_path)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Extracting parameters from ../data/sub-01/ses-interictalsleep/ieeg/sub-01_ses-interictalsleep_run-01_ieeg.vhdr...
    Setting channel info structure...
    Reading events from ../data/sub-01/ses-interictalsleep/ieeg/sub-01_ses-interictalsleep_run-01_events.tsv.
    Reading channel info from ../data/sub-01/ses-interictalsleep/ieeg/sub-01_ses-interictalsleep_run-01_channels.tsv.
    /home/circleci/project/examples/working_with_bids.py:73: RuntimeWarning: Did not find any electrodes.tsv associated with sub-01_ses-interictalsleep_run-01.

    The search_str was "../data/sub-01/**/sub-01_ses-interictalsleep*electrodes.tsv"
      raw = read_raw_bids(bids_path)
    /home/circleci/project/examples/working_with_bids.py:73: RuntimeWarning: Did not find any coordsystem.json associated with sub-01_ses-interictalsleep_run-01.

    The search_str was "../data/sub-01/**/sub-01_ses-interictalsleep*coordsystem.json"
      raw = read_raw_bids(bids_path)




.. GENERATED FROM PYTHON SOURCE LINES 76-78

Let's plot the data and see what it looks like
raw.plot()

.. GENERATED FROM PYTHON SOURCE LINES 80-88

Detect HFOs
-----------
All detectors inherit from the base class ``mne_hfo.base.Detector``,
which inherits from the :class:`sklearn.base.BaseEstimator` class.
To run any estimator, one instantiates it along with the hyper-parameters,
and then calls the ``fit`` function. Afterwards, detected HFOs are available
in the various data structures. The recommended usage is the DataFrame, which
is accessible via the ``mne_hfo.base.Detector.hfo_df`` property.

.. GENERATED FROM PYTHON SOURCE LINES 88-103

.. code-block:: default


    kwargs = {
        'threshold': 3,  # threshold for "significance"
        'win_size': 100,  # window size in samples
        'overlap': 0.25  # overlap in percentage relative to the window size
    }
    detector = RMSDetector(**kwargs)

    # run detector
    detector.fit(X=raw)

    # get the HFO results as an events.tsv DataFrame
    event_df = detector.hfo_event_df
    print(event_df.head())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

      0%|          | 0/50 [00:00<?, ?it/s]     80%|########  | 40/50 [00:00<00:00, 377.86it/s]    100%|##########| 50/50 [00:00<00:00, 470.51it/s]
        onset  ...  trial_type
    0  4.6250  ...    hfo_IAR2
    1  1.1750  ...    hfo_IAR3
    2  2.1875  ...    hfo_IAR3
    3  2.5750  ...    hfo_IAR3
    4  1.3125  ...    hfo_IAR4

    [5 rows x 4 columns]




.. GENERATED FROM PYTHON SOURCE LINES 104-111

Convert HFO events to annotations
---------------------------------
Detectors output HFO events detected as a DataFrame fashioned after the
``*_events.tsv`` files in BIDS-iEEG. Instead, HFO events are indeed
Derivatives of the Raw data, that are estimated/detected using mne-hfo.
The correct way to store them is in terms of an ``*_annotations.tsv``,
according to the BIDS-Derivatives specification.

.. GENERATED FROM PYTHON SOURCE LINES 111-126

.. code-block:: default


    # convert event df -> annotation df
    annot_df = events_to_annotations(event_df)

    # alternatively save annotation dataframe to disc
    annot_path = bids_path.copy().update(suffix='annotations',
                                         root=root / 'derivatives',
                                         extension='.tsv',
                                         check=False)

    intended_for = raw.filenames[0]
    write_annotations(annot_df, fname=annot_path,
                      intended_for=intended_for, root=root)
    print(annot_df.head())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

        onset  ...  sample
    0  4.6250  ...  9250.0
    1  1.1750  ...  2350.0
    2  2.1875  ...  4375.0
    3  2.5750  ...  5150.0
    4  1.3125  ...  2625.0

    [5 rows x 5 columns]




.. GENERATED FROM PYTHON SOURCE LINES 127-131

Read data back in
-----------------
The data will match what was written.
In addition, you can check for overlapping HFOs.

.. GENERATED FROM PYTHON SOURCE LINES 131-134

.. code-block:: default

    annot_df = read_annotations(annot_path)

    print(annot_df.head())




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Extracting parameters from ../data/sub-01/ses-interictalsleep/ieeg/sub-01_ses-interictalsleep_run-01_ieeg.vhdr...
    Setting channel info structure...
    Reading events from ../data/sub-01/ses-interictalsleep/ieeg/sub-01_ses-interictalsleep_run-01_events.tsv.
    Reading channel info from ../data/sub-01/ses-interictalsleep/ieeg/sub-01_ses-interictalsleep_run-01_channels.tsv.
    /home/circleci/project/mne_hfo/io.py:364: RuntimeWarning: Did not find any electrodes.tsv associated with sub-01_ses-interictalsleep_run-01.

    The search_str was "../data/sub-01/**/sub-01_ses-interictalsleep*electrodes.tsv"
      raw = read_raw_bids(raw_fpath)
    /home/circleci/project/mne_hfo/io.py:364: RuntimeWarning: Did not find any coordsystem.json associated with sub-01_ses-interictalsleep_run-01.

    The search_str was "../data/sub-01/**/sub-01_ses-interictalsleep*coordsystem.json"
      raw = read_raw_bids(raw_fpath)
        onset  ...  sample
    0  4.6250  ...  9250.0
    1  1.1750  ...  2350.0
    2  2.1875  ...  4375.0
    3  2.5750  ...  5150.0
    4  1.3125  ...  2625.0

    [5 rows x 5 columns]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.118 seconds)


.. _sphx_glr_download_auto_examples_working_with_bids.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: working_with_bids.py <working_with_bids.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: working_with_bids.ipynb <working_with_bids.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
